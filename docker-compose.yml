version: "3.8"

services:
  user_service:
    build:
      context: ./user_service
      dockerfile: Dockerfile
    container_name: user_service
    env_file:
      - .env
    ports:
      - "8000:8000"
    volumes:
      - ./user_service/app:/app/app
      - ./user_service/scripts:/app/scripts
      - ./user_service/alembic:/app/alembic
      - ./user_service/alembic.ini:/app/alembic.ini
    depends_on:
      - elasticsearch
      - kafka
      - redis
    networks:
      - backend

  redis:
    image: redis:7-alpine
    container_name: user_service_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - backend

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - backend

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - backend

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    networks:
      - backend

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.0
    container_name: kibana
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - backend

  log_service:
    build:
      context: ./log_service
      dockerfile: Dockerfile
    container_name: log_service
    env_file:
      - .env
    depends_on:
      - kafka
      - elasticsearch
    networks:
      - backend
volumes:
  redis_data:

networks:
  backend:
    driver: bridge
